/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 *
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E     &kp R      &kp T        &kp Y            &kp U        &kp I            &kp O    &kp P     &kp DELETE
&kp LEFT_CONTROL  &kp A  &kp S  &kp D     &kp F      &kp G        &kp H            &kp J        &kp K            &kp L    &kp SEMI  &kp RIGHT_ALT
&kp LSHFT         &kp Z  &kp X  &kp C     &kp V      &kp B        &kp N            &kp M        &kp COMMA        &kp DOT  &kp FSLH  &kp ESC
                                &kp LGUI  &kp ENTER  &lt 1 TAB    &lt 2 BACKSPACE  &lt 3 SPACE  &kp RIGHT_SHIFT
            >;
        };

        Lower_Layer {
            bindings = <
&none  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH   &kp DOLLAR      &kp PERCENT         &kp CARET        &kp AMPERSAND      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
&none  &kp N1           &kp N2       &kp N3     &kp N4          &kp N5              &kp N6           &kp N7             &kp N8        &kp N9                &kp N0                 &none
&none  &none            &kp TILDE    &kp GRAVE  &kp LEFT_BRACE  &kp LEFT_BRACKET    &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &none         &none                 &none                  &none
                                     &none      &none           &none               &none            &none              &kp COLON
            >;
        };

        Raise_Layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&none      &kp DEL        &kp EQUAL      &kp QUESTION      &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC    &kp LC(PAGE_UP)   &kp LC(PAGE_DOWN)  &kp K_BACK       &kp K_FORWARD  &kp PIPE  &kp BSPC
&kp LC(C)  &kp ASTRK      &kp LESS_THAN  &kp GREATER_THAN  &kp PAGE_DOWN         &kp PAGE_UP             &kp LEFT_ARROW    &kp DOWN           &kp UP_ARROW     &kp RIGHT      &none     &kp GRAVE
&kp LC(V)  &kp BACKSLASH  &kp MINUS      &kp PLUS          &kp UNDER             &kp SEMI                &kp C_PLAY_PAUSE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none          &none     &kp TILDE
                                         &kp DEL           &kp K_COPY            &kp K_PASTE             &none             &trans             &none
            >;
        };

        Func {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    |BTCLR|     | SPC |   | ENT |     | ALT |

            label = "BT";
            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &bootloader     &trans    &trans    &trans    &trans     &trans  &trans
                                        &bt BT_CLR    &kp F3        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
